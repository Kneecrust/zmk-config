/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ { 
    combos {
        compatible = "zmk,combos";
        combo_lbrc {
            timeout-ms = <30>;
	    key-positions = <1 2>;
            bindings = <&kp LBRC>;
            layers = <0>;
        };
        combo_lbkt {
            timeout-ms = <30>;
	    key-positions = <12 13>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };
        combo_lpar {
            timeout-ms = <30>;
	    key-positions = <23 24>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_rbrc {
            timeout-ms = <30>;
	    key-positions = <2 3>;
            bindings = <&kp RBRC>;
            layers = <0>;
        };
        combo_rbkt {
            timeout-ms = <30>;
	    key-positions = <13 14>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };
        combo_rpar {
            timeout-ms = <30>;
	    key-positions = <24 25>;
            bindings = <&kp RPAR>;
            layers = <0>;
        };
        combo_equal {
            timeout-ms = <30>;
	    key-positions = <7 8>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
        combo_apos {
            timeout-ms = <30>;
	    key-positions = <18 19>;
            bindings = <&kp SQT>;
            layers = <0>;
        };
        combo_dquote {
            timeout-ms = <30>;
	    key-positions = <29 30>;
            bindings = <&kp DQT>;
            layers = <0>;
        };
        combo_minus {
            timeout-ms = <30>;
	    key-positions = <6 7>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };
        combo_under {
            timeout-ms = <30>;
	    key-positions = <17 18>;
            bindings = <&kp UNDER>;
            layers = <0>;
        };
        combo_bslsh {
            timeout-ms = <30>;
	    key-positions = <28 29>;
            bindings = <&kp BSLH>;
            layers = <0>;
        };

    };

behaviors {
          hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <225>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

keymap {
                compatible = "zmk,keymap";

default_layer {
// -----------------------------------------------------------------------------------------
//        |  Q  |  W  |  F  |  P  |  B  |                   |  J  |  L   |  U  |  Y  |  ;  | 
// | SHIFT|  A  |  R  |  S  |  T  |  G  |                   |  M  |  N   |  E  |  I  |  O  |  DEL  |
//        |  Z  |  X  |  C  |  D  |  V  |                   |  K  |  H   |  ,  |  .  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP| 


bindings = <
             &kp Q   &kp W        &kp F       &kp P       &kp B                                     &kp J    &kp L       &kp U      &kp Y       &kp SEMI  
   &kp LSHFT &kp A   &kp R        &kp S       &kp T       &kp G                                     &kp M    &kp N       &kp E      &kp I       &kp O       &kp DEL
             &kp Z   &kp X        &kp C       &kp D       &kp V                                     &kp K    &kp H       &kp COMMA  &kp DOT     &kp FSLH 
                                                          &kp SPACE  &kp RET                &kp ESC &kp BKSP
>;


//bindings = <
//             &kp Q   &kp W        &kp F       &kp P       &kp B                                     &kp J    &kp L       &kp U      &kp Y       &kp SEMI  
//   &kp LSHFT &kp A   &hm LCTRL R  &hm LALT S  &hm LWIN T  &kp G                                     &kp M    &hm RWIN N  &hm RALT E &hm RCTRL I &kp O  &lt FUNC DEL
//             &kp Z   &kp X        &kp C       &kp D       &kp V                                     &kp K    &kp H       &kp COMMA  &kp DOT     &kp FSLH 
//                                                          &lt NUM SPACE  &lt SYM RET    &lt NAV ESC &kp BKSP
//>;
};


};
};
