/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4

/ { 
    combos {
        compatible = "zmk,combos";
        combo_lbrc {
            timeout-ms = <30>;
	    key-positions = <1 2>;
            bindings = <&kp LBRC>;
            layers = <0>;
        };
        combo_lbkt {
            timeout-ms = <30>;
	    key-positions = <12 13>;
            bindings = <&kp LBKT>;
            layers = <0>;
        };
        combo_lpar {
            timeout-ms = <30>;
	    key-positions = <23 24>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };
        combo_rbrc {
            timeout-ms = <30>;
	    key-positions = <2 3>;
            bindings = <&kp RBRC>;
            layers = <0>;
        };
        combo_rbkt {
            timeout-ms = <30>;
	    key-positions = <13 14>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };
        combo_rpar {
            timeout-ms = <30>;
	    key-positions = <24 25>;
            bindings = <&kp RPAR>;
            layers = <0>;
        };
        combo_equal {
            timeout-ms = <30>;
	    key-positions = <7 8>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
        combo_apos {
            timeout-ms = <30>;
	    key-positions = <18 19>;
            bindings = <&kp SQT>;
            layers = <0>;
        };
        combo_dquote {
            timeout-ms = <30>;
	    key-positions = <29 30>;
            bindings = <&kp DQT>;
            layers = <0>;
        };
        combo_minus {
            timeout-ms = <30>;
	    key-positions = <6 7>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };
        combo_under {
            timeout-ms = <30>;
	    key-positions = <17 18>;
            bindings = <&kp UNDER>;
            layers = <0>;
        };
        combo_bslsh {
            timeout-ms = <30>;
	    key-positions = <28 29>;
            bindings = <&kp BSLH>;
            layers = <0>;
        };

    };

behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";                
            bindings = <&kp>, <&kp>;
            };
        };

keymap {
                compatible = "zmk,keymap";

default_layer {
// -----------------------------------------------------------------------------------------
//        |  Q  |  W  |  F  |  P  |  B  |                   |  J  |  L   |  U  |  Y  |  ;  | 
// | SHIFT|  A  |  R  |  S  |  T  |  G  |                   |  M  |  N   |  E  |  I  |  O  |  DEL  |
//        |  Z  |  X  |  C  |  D  |  V  |                   |  K  |  H   |  ,  |  .  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP| 


//bindings = <
//             &kp Q   &kp W        &kp F       &kp P       &kp B                                     &kp J    &kp L       &kp U      &kp Y       &kp SEMI  
//   &kp LSHFT &kp A   &kp R        &kp S       &kp T       &kp G                                     &kp M    &kp N       &kp E      &kp I       &kp O       &kp DEL
//             &kp Z   &kp X        &kp C       &kp D       &kp V                                     &kp K    &kp H       &kp COMMA  &kp DOT     &kp FSLH 
//                                                          &kp SPACE  &kp RET                &kp ESC &kp BKSP
//>;


bindings = <
             &kp Q   &kp W        &kp F       &kp P       &kp B                                     &kp J    &kp L       &kp U      &kp Y       &kp SEMI  
   &kp LSHFT &kp A   &hm LCTRL R  &hm LALT S  &hm LWIN T  &kp G                                     &kp M    &hm RWIN N  &hm RALT E &hm RCTRL I &kp O  &lt FUN DEL
             &kp Z   &kp X        &kp C       &kp D       &kp V                                     &kp K    &kp H       &kp COMMA  &kp DOT     &kp FSLH 
                                                          &lt NUM SPACE  &lt SYM RET    &lt NAV ESC &kp BKSP
>;
};

                
nav_layer {
// -----------------------------------------------------------------------------------------
//        |  Q  |  W  |  F  |  P  |  B  |                   |  J  |  L   |  U  |  Y  |  ;  | 
// | SHIFT|  A  |  R  |  S  |  T  |  G  |                   |  M  |  N   |  E  |  I  |  O  |  DEL  |
//        |  Z  |  X  |  C  |  D  |  V  |                   |  K  |  H   |  ,  |  .  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP|  


bindings = <
                 &trans     &trans      &trans     &trans    &trans                           &trans    &kp PG_DN   &kp UP     &kp PG_UP   &trans    
     &kp LSHFT   &trans     &kp LCTRL   &kp LALT   &kp LWIN  &trans                           &kp TAB   &kp LEFT    &kp DOWN   &kp RIGHT I &trans  &kp DEL
                 &trans     &trans      &trans     &trans    &trans                           &kp CAPS  &kp HOME    &kp END    &kp INS     &trans 
                                                             &kp SPACE &kp RET        &trans  &kp BKSP
>;
};


num_layer {
// -----------------------------------------------------------------------------------------
//        |     |     |     |     |     |                   |  *  |  7   |  8  |  9  |  +  | 
// | SHIFT| SPC | CTL | ALT | WIN |     |                   |  -  |  0   |  1  |  2  |  3  |  =  |
//        |     |     |     |     |     |                   |  /  |  4   |  5  |  6  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP| 

bindings = <
                 &trans        &trans         &trans        &trans       &trans                           &kp STAR   &kp N7   &kp N8   &kp N9   &kp PLUS    
   &kp LSHFT     &kp SPACE     &kp LCTRL      &kp LALT      &kp LWIN     &trans                           &kp MINUS  &kp N0   &kp N1   &kp N2   &kp N3    &kp EQUAL
                 &trans        &trans         &trans        &trans       &trans                           &kp FSLH   &kp N4   &kp N5   &kp N6   &kp FSLH 
                                                                         &trans   &kp RET         &kp ESC &kp BKSP
>;
};
        

sym_layer {
// -----------------------------------------------------------------------------------------
//        |  Q  |  W  |  F  |  P  |  B  |                   |  J  |  L   |  U  |  Y  |  ;  | 
// | SHIFT|  A  |  R  |  S  |  T  |  G  |                   |  M  |  N   |  E  |  I  |  O  |  SHIFT  |
//        |  Z  |  X  |  C  |  D  |  V  |                   |  K  |  H   |  ,  |  .  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP| 

bindings = <
                 &trans   &trans      &trans     &trans    &trans                           &kp PIPE   &kp AMPS   &kp STAR   &kp LPAR  &kp TILDE   
   &kp LSHFT     &kp RET  &kp LCTRL   &kp LALT   &kp LWIN  &trans                           &kp UNDER  &kp RPAR   &kp EXCL   &kp AT    &kp HASH  &kp EQUAL
                 &trans   &trans      &kp C      &trans    &trans                           &kp FSLH   &kp DLLR   &kp PRCNT  &kp CARET &kp GRAVE
                                                 &kp SPACE &trans                   &kp ESC &kp BKSP
>;
};
                
                
fun_layer {
// -----------------------------------------------------------------------------------------
//        |  Q  |  W  |  F  |  P  |  B  |                   |  J  |  L   |  U  |  Y  |  ;  | 
// | SHIFT|  A  |  R  |  S  |  T  |  G  |                   |  M  |  N   |  E  |  I  |  O  |  SHIFT  |
//        |  Z  |  X  |  C  |  D  |  V  |                   |  K  |  H   |  ,  |  .  |  /  | 
//                                | SPC | ENT |       | ESC | BKSP| 

bindings = <
                 &kp F8   &kp F7   &kp F6   &kp F5  &trans                              &trans  &trans     &trans     &trans    &trans   
   &kp PSCRN     &kp F3   &kp F2   &kp F1   &kp F4  &trans                              &trans  &kp RWIN   &kp RALT   &kp RCTRL &trans &trans  
                 &kp F12  &kp F11  &kp F10  &kp F9  &trans                              &trans  &trans     &trans     &trans    &trans
                                                    &kp SPACE  &kp RET          &kp ESC &kp BKSP
>;
};        
};
};
